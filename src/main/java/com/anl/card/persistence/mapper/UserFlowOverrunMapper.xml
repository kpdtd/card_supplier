<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >


<mapper namespace="com.anl.card.persistence.mapper.UserFlowOverrunMapper">
    
	<insert id="insert" useGeneratedKeys="true" keyProperty="id">
    <![CDATA[
        INSERT INTO t_user_flow_overrun (
        	id,
        	card_id,
        	flow,
        	balance,
        	bill_date,
        	state,
        	create_time,
        	update_time
        ) VALUES (
        	#{id},
        	#{cardId},
        	#{flow},
        	#{balance},
        	#{billDate},
        	#{state},
        	#{createTime},
        	#{updateTime}
        )
    ]]>
	</insert>

	<update id="update" parameterType="com.anl.card.persistence.po.UserFlowOverrun">
        UPDATE t_user_flow_overrun 
		<set>
	        <if test="cardId != null">
	        	card_id = #{cardId},
	        </if>
	        <if test="flow != null">
	        	flow = #{flow},
	        </if>
	        <if test="balance != null">
	        	balance = #{balance},
	        </if>
	        <if test="billDate != null">
	        	bill_date = #{billDate},
	        </if>
	        <if test="state != null">
	        	state = #{state},
	        </if>
	        <if test="createTime != null">
	        	create_time = #{createTime},
	        </if>
	        <if test="updateTime != null">
	        	update_time = #{updateTime}
	        </if>
	    </set>
        WHERE
	        id = #{id}
	</update>

	<delete id="deleteById">
        DELETE FROM t_user_flow_overrun WHERE
        id = #{id}
	</delete>

	<select id="getById" resultType="com.anl.card.persistence.po.UserFlowOverrun">
		SELECT
			*
		FROM
			t_user_flow_overrun 
	    WHERE
	        id = #{id} 
	</select>

	<!-- 查询条件where,如果有时间范围查询，参数必须是startTime 和 endTime -->
	<sql id="where">
		<where>
			<if test="id != null">
				AND id = #{id}
			</if>
			<if test="cardId != null">
				AND card_id = #{cardId}
			</if>
			<if test="flow != null">
				AND flow = #{flow}
			</if>
			<if test="balance != null">
				AND balance = #{balance}
			</if>
			<if test="billDate != null">
				AND bill_date = #{billDate}
			</if>
			<if test="state != null">
				AND state = #{state}
			</if>
			<if test="startTime != null">
	       	<![CDATA[
				AND create_time >= #{startTime} 
			]]>
			</if>
			<if test="endTime != null">
			<![CDATA[
				AND create_time < #{endTime}
			]]>
			</if>
			<if test="updateTime != null">
				AND update_time = #{updateTime}
			</if>
		</where>
	</sql>
	
	<sql id="whereForPo">
		<where>
			<if test="id != null">
				AND id = #{id}
			</if>
			<if test="cardId != null">
				AND card_id = #{cardId}
			</if>
			<if test="flow != null">
				AND flow = #{flow}
			</if>
			<if test="balance != null">
				AND balance = #{balance}
			</if>
			<if test="state != null">
				AND state = #{state}
			</if>
		</where>
	</sql>	

	<select id="count" parameterType="java.util.Map" resultType="int">
		SELECT count(*) FROM t_user_flow_overrun
		<include refid="where" />
	</select>

	<select id="getListByMap" parameterType="java.util.Map" resultType="com.anl.card.persistence.po.UserFlowOverrun">
		SELECT 
			*
		FROM
			t_user_flow_overrun 
	    <include refid="where" />
		<if test="startPage!= null">
			limit #{startPage}, #{pageSize} 
		</if>	
	</select>
	
	<select id="getListByPo" parameterType="com.anl.card.persistence.po.UserFlowOverrun" resultType="com.anl.card.persistence.po.UserFlowOverrun">
		SELECT 
			*
		FROM 
			t_user_flow_overrun 
	    <include refid="whereForPo" />
	</select>
</mapper>

