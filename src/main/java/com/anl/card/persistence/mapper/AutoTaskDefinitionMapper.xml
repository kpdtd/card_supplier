<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >


<mapper namespace="com.anl.card.persistence.mapper.AutoTaskDefinitionMapper">
    
	<insert id="insert" useGeneratedKeys="true" keyProperty="id">
    <![CDATA[
        INSERT INTO t_auto_task_definition (
        	id,
        	supplier_id,
        	task_name,
        	task_desc,
        	task_exec_logic,
        	task_time_cron,
        	notice_type,
        	notice_person,
        	execute_state,
        	state,
        	create_time,
        	update_time
        ) VALUES (
        	#{id},
        	#{supplierId},
        	#{taskName},
        	#{taskDesc},
        	#{taskExecLogic},
        	#{taskTimeCron},
        	#{noticeType},
        	#{noticePerson},
        	#{executeState},
        	#{state},
        	#{createTime},
        	#{updateTime}
        )
    ]]>
	</insert>

	<update id="update" parameterType="com.anl.card.persistence.po.AutoTaskDefinition">
        UPDATE t_auto_task_definition 
		<set>
	        <if test="supplierId != null">
	        	supplier_id = #{supplierId},
	        </if>
	        <if test="taskName != null">
	        	task_name = #{taskName},
	        </if>
	        <if test="taskDesc != null">
	        	task_desc = #{taskDesc},
	        </if>
	        <if test="taskExecLogic != null">
	        	task_exec_logic = #{taskExecLogic},
	        </if>
	        <if test="taskTimeCron != null">
	        	task_time_cron = #{taskTimeCron},
	        </if>
	        <if test="noticeType != null">
	        	notice_type = #{noticeType},
	        </if>
	        <if test="noticePerson != null">
	        	notice_person = #{noticePerson},
	        </if>
	        <if test="executeState != null">
	        	execute_state = #{executeState},
	        </if>
	        <if test="state != null">
	        	state = #{state},
	        </if>
	        <if test="createTime != null">
	        	create_time = #{createTime},
	        </if>
	        <if test="updateTime != null">
	        	update_time = #{updateTime}
	        </if>
	    </set>
        WHERE
	        id = #{id}
	</update>

	<delete id="deleteById">
        DELETE FROM t_auto_task_definition WHERE
        id = #{id}
	</delete>

	<select id="getById" resultType="com.anl.card.persistence.po.AutoTaskDefinition">
		SELECT
			*
		FROM
			t_auto_task_definition 
	    WHERE
	        id = #{id} 
	</select>

	<!-- 查询条件where,如果有时间范围查询，参数必须是startTime 和 endTime -->
	<sql id="where">
		<where>
			<if test="id != null">
				AND id = #{id}
			</if>
			<if test="supplierId != null">
				AND supplier_id = #{supplierId}
			</if>
			<if test="taskName != null">
				AND task_name = #{taskName}
			</if>
			<if test="taskDesc != null">
				AND task_desc = #{taskDesc}
			</if>
			<if test="taskExecLogic != null">
				AND task_exec_logic = #{taskExecLogic}
			</if>
			<if test="taskTimeCron != null">
				AND task_time_cron = #{taskTimeCron}
			</if>
			<if test="noticeType != null">
				AND notice_type = #{noticeType}
			</if>
			<if test="noticePerson != null">
				AND notice_person = #{noticePerson}
			</if>
			<if test="executeState != null">
				AND execute_state = #{executeState}
			</if>
			<if test="state != null">
				AND state = #{state}
			</if>
			<if test="startTime != null">
	       	<![CDATA[
				AND create_time >= #{startTime} 
			]]>
			</if>
			<if test="endTime != null">
			<![CDATA[
				AND create_time < #{endTime}
			]]>
			</if>
			<if test="updateTime != null">
				AND update_time = #{updateTime}
			</if>
		</where>
	</sql>
	
	<sql id="whereForPo">
		<where>
			<if test="id != null">
				AND id = #{id}
			</if>
			<if test="supplierId != null">
				AND supplier_id = #{supplierId}
			</if>
			<if test="taskName != null">
				AND task_name = #{taskName}
			</if>
			<if test="taskDesc != null">
				AND task_desc = #{taskDesc}
			</if>
			<if test="taskExecLogic != null">
				AND task_exec_logic = #{taskExecLogic}
			</if>
			<if test="taskTimeCron != null">
				AND task_time_cron = #{taskTimeCron}
			</if>
			<if test="noticeType != null">
				AND notice_type = #{noticeType}
			</if>
			<if test="noticePerson != null">
				AND notice_person = #{noticePerson}
			</if>
			<if test="executeState != null">
				AND execute_state = #{executeState}
			</if>
			<if test="state != null">
				AND state = #{state}
			</if>
		</where>
	</sql>	

	<select id="count" parameterType="java.util.Map" resultType="int">
		SELECT count(*) FROM t_auto_task_definition
		<include refid="where" />
	</select>

	<select id="getListByMap" parameterType="java.util.Map" resultType="com.anl.card.persistence.po.AutoTaskDefinition">
		SELECT 
			*
		FROM
			t_auto_task_definition 
	    <include refid="where" />
		<if test="startPage!= null">
			limit #{startPage}, #{pageSize} 
		</if>	
	</select>
	
	<select id="getListByPo" parameterType="com.anl.card.persistence.po.AutoTaskDefinition" resultType="com.anl.card.persistence.po.AutoTaskDefinition">
		SELECT 
			*
		FROM 
			t_auto_task_definition 
	    <include refid="whereForPo" />
	</select>
</mapper>

